### [[9.10: Penalties of Over-Abstraction]]

{{ todo__needs_editing }}

Removing the real-worldness of things always makes them easier to abstract, and also unequipped to solve real-world problems as-is.

Many times when the real-world problem is finally solved with the non-real-worldness-based abstracted solution, the fit is not a good one, because the abstracted solution factored out critical elements of the problem, and now the problem is solved less efficiently, and in some cases too inefficiently.

It yields better results to design a solution to an exact problem, so that you can solve it as efficiently as possible, and then abstract the solution into two split abstracted and real-world components.

Then you know the abstracted version solves a problem efficiently, because it's the exact solution you just designed to solve your problem-at-hand efficiently.

If it worked for this problem efficiently, there are likely other problems that can also make highly efficient or sufficiently efficient use of the abstracted solution as well.

This is obviously something that can be logically proved if someone wanted to spend the effort.

